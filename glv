#!/usr/bin/env bash
#
# Golang Latest Version
# Install
# Should work on sh, dash, bash, ksh, zsh
#
# Copyright (C) 2021-present, Implemented by Bin HUA <code@tourcoder.com>

main(){
  if  [[ $(command -v glv) ]]; then
    if ! [[ $(command -v git) ]]; then
    echo -e "Need to install Git :)
************************************ 
Debian/Ubuntu: apt-get install git
macOS: brew install git
RedHat/CentOS: yum install git
************************************" && exit 1
    fi
    remote_goversion=`git ls-remote --tags https://github.com/golang/go.git | awk '{print $2}' | awk -F"/" '{print $3}' | grep -v "weekly\|rc\|beta\|release" | sort -n -t "." -k2 -k3 | tail -n 1`
    if [[ "$(uname)" = "Darwin" ]] ;then
      currenttype="darwin-amd64"
    elif [[ "$(uname)" = "Linux" ]]; then
      if [[ "$(getconf LONG_BIT)" = "64" ]]; then
        currenttype="linux-amd64"
      else
        currenttype="linux-386"
      fi
    elif [[ "$(uname)" = "MINGW32_NT" ]]; then
      echo -e "Please go to https://golang.org/dl/" && exit 1
    else
      echo -e "System unsupported" && exit 1
    fi
    if ! [[ $(command -v go) ]]; then
      curl -LO https://golang.org/dl/${remote_goversion}.${currenttype}.tar.gz
      sudo tar -C /usr/local -zxf ${remote_goversion}.${currenttype}.tar.gz
      rm ${remote_goversion}.${currenttype}.tar.gz
      EXPORTSCRITP="export PATH=\$PATH:/usr/local/go/bin"
      if [[ "$(ps -p $PPID -o comm=)" == "-zsh" ]]; then
        echo "${EXPORTSCRITP}">>~/.zshrc
        echo -e "Golang installed, it is recommended to close and reopen the terminal" && exit 1
      elif [ "$(ps -p $PPID -o comm=)" == "bash" ]; then
        echo "${EXPORTSCRITP}">>~/.bashrc
        echo -e "Golang installed, it is recommended to close and reopen the terminal" && exit 1
      else
        echo -e "Golang installed, append the following to your shell profile\\nexport PATH=\$PATH:/usr/local/go/bin" && exit 1
      fi
    else
      local_goversion=$(go version | awk '{print $3}')
    	if [[ "${local_goversion}" = "${remote_goversion}" ]]; then 
	  echo -e "The latest version ${local_goversion} is already installed on your system" && exit 1
        else
          echo -e "Local version: ${local_goversion}"
          echo -e "Latest version: ${remote_goversion}"
          read -p "Do you want to update? (y/N): " yN
          if [[ "${yN}" = "y" ]]; then
            if [ -d "/usr/local/go" ]; then
              curl -LO https://golang.org/dl/${remote_goversion}.${currenttype}.tar.gz
              sudo mv /usr/local/go /usr/local/${local_goversion}
              sudo tar -C /usr/local -zxf ${remote_goversion}.${currenttype}.tar.gz
              rm ${remote_goversion}.${currenttype}.tar.gz
              EXPORTSCRITP="export PATH=\$PATH:/usr/local/go/bin"
              if [[ "$(ps -p $PPID -o comm=)" == "-zsh" ]]; then
                echo "${EXPORTSCRITP}">>~/.zshrc
                echo -e "Golang updated, it is recommended to close and reopen the terminal" && exit 1
              elif [ "$(ps -p $PPID -o comm=)" == "bash" ]; then
                echo "${EXPORTSCRITP}">>~/.bashrc
                echo -e "Golang updated, it is recommended to close and reopen the terminal" && exit 1
              else
                echo -e "Golang updated, append the following to your shell profile\\nexport PATH=\$PATH:/usr/local/go/bin" && exit 1
              fi
            fi
          else
            echo -e "Golang update cancelled" && exit 1
          fi
    	fi
    fi 
  else
    cp glv /usr/local/bin/glv
    echo -e "glv installed, just run \`glv\`" && exit 1
  fi
}

main
